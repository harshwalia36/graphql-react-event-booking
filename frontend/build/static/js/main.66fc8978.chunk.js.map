{"version":3,"sources":["context/auth-context.js","pages/Auth.js","component/Spinner/Spinner.js","component/Bookings/BookingList/BookingList.js","pages/Booking.js","component/Modal/Modal.js","component/Backdrop/Backdrop.js","component/Events/EventList/Eventitem/EventItem.js","component/Events/EventList/EventList.js","pages/Event.js","component/NavigationBar/MainNavigation.js","App.js","index.js"],"names":["React","createContext","token","userId","login","tokenExpiration","logout","AuthPage","props","state","isLogin","switchModeHandler","setState","prevState","submitHandler","event","preventDefault","email","emailElem","current","value","password","passwordElem","trim","length","requestBody","query","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","context","catch","err","console","log","createRef","Fragment","className","this","onSubmit","htmlFor","type","id","ref","onClick","Component","contextType","AuthContext","spinner","bookingList","bookings","map","booking","key","_id","title","Date","createdAt","toLocaleDateString","onDelete","bind","BookingPage","isLoading","fetchBookings","deleteBookingHandler","bookingId","filter","modal","children","canCancel","onCancel","canConfirm","onConfirm","confirmText","backdrop","eventItem","eventId","price","date","creatorId","onDetail","eventList","events","authUserId","creator","onViewDetail","EventsPage","creating","selectedEvent","isActive","startCreateEventHandler","modalConfirmHandler","titleElRef","priceElRef","dateElRef","description","descriptionElRef","updatedEvents","push","createEvent","modalCancelHandler","showDetailHandler","find","e","bookEventHandler","Authorization","fetchEvents","rows","mainNavigation","Consumer","to","App","Provider","from","exact","path","component","BookingsPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66fc8978.chunk.js","sourcesContent":["import React from 'react';\n\nexport default React.createContext({\n    token:null,\n    userId : null,\n    login: (token,userId,tokenExpiration) => {},\n    logout: () => {}\n});\n","import React, {Component} from 'react';\r\nimport AuthContext from '../context/auth-context';\r\nimport './Auth.css';\r\n\r\nclass AuthPage extends Component {\r\n  state={\r\n      isLogin:true\r\n  };\r\n\r\n  //we consume the context here(it provides this.context method to get the Default svalue)\r\n  static contextType=AuthContext;\r\n\r\n  switchModeHandler = () =>{\r\n      this.setState(prevState => {\r\n          return {isLogin:!prevState.isLogin};\r\n      });\r\n        \r\n  }\r\n\r\n      constructor(props){\r\n          super(props);\r\n          this.emailElem=React.createRef();\r\n          this.passwordElem=React.createRef();\r\n      }\r\n\r\n      submitHandler=(event) =>{\r\n          event.preventDefault();\r\n          const email=this.emailElem.current.value;\r\n          const password=this.passwordElem.current.value;\r\n\r\n          if(email.trim().length===0||password.trim().length===0)\r\n          return;\r\n\r\n          let requestBody={\r\n              query:`\r\n              query {\r\n                  login (email:\"${email}\",password:\"${password}\") {\r\n                      userId\r\n                      token\r\n                      tokenExpiration\r\n                  }\r\n              }\r\n              `\r\n          }\r\n\r\n          if(!this.state.isLogin)\r\n          {\r\n            requestBody={\r\n                query:`\r\n                mutation {\r\n                    createUser(userinput:{email:\"${email}\",password:\"${password}\"}){\r\n                        _id\r\n                        email\r\n                    }\r\n                }`\r\n            };\r\n          }\r\n          \r\n          \r\n          \r\n          fetch('http://localhost:8000/graphql', {\r\n              method:'POST',    //graphql request are always POST and by default it sends in GET\r\n              body:JSON.stringify(requestBody),\r\n              headers:{\r\n                  'Content-Type':'application/json'  //we tell the backend we are sending data in JSON. so, parse it as json `\r\n              }\r\n          })\r\n          .then(res =>{\r\n              if(res.status!==200 && res.status!==201){\r\n                throw new Error('Failed');\r\n              }\r\n              \r\n              return res.json();\r\n          })\r\n          .then(resData =>{\r\n              if(resData.data.login.token)\r\n              {\r\n                  this.context.login(resData.data.login.token,resData.data.login.userId,resData.data.login.tokenExpiration);\r\n              }\r\n          })\r\n          .catch(err =>{\r\n              console.log(err);\r\n          });\r\n      }\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n               <h1 className=\"headingAuth\">\r\n            {this.state.isLogin ? ('Login Page'):('SignUp page' )}\r\n            </h1>\r\n            <form className='auth-form' onSubmit={this.submitHandler}>\r\n              < div className='form-control'>\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input type=\"email\" id=\"email\" ref={this.emailElem} />\r\n              </div>\r\n              < div className='form-control'>\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input type=\"password\" id=\"password\" ref={this.passwordElem} />\r\n              </div>\r\n              <div className='form-action'>\r\n                  <button className=\"btn\" type=\"submit\">Submit</button>\r\n                  <button className=\"btn\" type='button' onClick={this.switchModeHandler}>Switch to {this.state.isLogin ? 'SignUp' : 'Login'}</button>\r\n\r\n              </div>\r\n            </form>\r\n            </React.Fragment>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nexport default AuthPage;\r\n","import React from 'react';\r\n\r\nimport './Spinner.css';\r\n\r\nconst spinner = () => (\r\n  <div className=\"spinner\">\r\n    <div className=\"lds-dual-ring\" />\r\n  </div>\r\n);\r\n\r\nexport default spinner;","import React from 'react';\r\n\r\nimport './BookingList.css';\r\n\r\nconst bookingList = props => (\r\n  <ul className=\"bookings__list\">\r\n    {props.bookings.map(booking => {\r\n      return (\r\n        <li key={booking._id} className=\"bookings__item\">\r\n          <div className=\"bookings__item-data\">\r\n            {booking.event.title} -{' '}\r\n            {new Date(booking.createdAt).toLocaleDateString()}\r\n          </div>\r\n          <div className=\"bookings__item-actions\">\r\n            <button className=\"btn\" onClick={props.onDelete.bind(this, booking._id)}>Cancel</button>\r\n          </div>\r\n        </li>\r\n      );\r\n    })}\r\n  </ul>\r\n);\r\n\r\nexport default bookingList;","import React, {Component} from 'react';\r\nimport AuthContext from '../context/auth-context';\r\nimport Spinner from '../component/Spinner/Spinner';\r\nimport BookingList from '../component/Bookings/BookingList/BookingList';\r\n\r\nclass BookingPage extends Component {\r\n    state={\r\n        isLoading:false,\r\n        bookings:[]\r\n    };\r\n\r\n    static contextType=AuthContext;\r\n\r\n    componentDidMount() {\r\n      this.fetchBookings();\r\n    }\r\n    \r\n    fetchBookings = () =>{\r\n   this.setState({isLoading: true});\r\n    const requestBody = {\r\n      query: `\r\n          query {\r\n            bookings {\r\n              _id\r\n              createdAt\r\n              event {\r\n                _id\r\n                title\r\n                date\r\n              }\r\n            }\r\n          }\r\n        `\r\n    };\r\n  const token=this.context.token;\r\n\r\n  fetch('http://localhost:8000/graphql', {\r\n      method:'POST',    //graphql request are always POST and by default it sends in GET\r\n      body:JSON.stringify(requestBody),\r\n      headers:{\r\n          'Content-Type':'application/json',\r\n          'Authorization':'Bearer ' + token\r\n      }\r\n  })\r\n  .then(res =>{\r\n      if(res.status!==200 && res.status!==201){\r\n        throw new Error('Failed');\r\n      }\r\n      return res.json();\r\n  })\r\n  .then(resData =>{\r\n    const bookings = resData.data.bookings;\r\n        this.setState({ bookings: bookings, isLoading:false});\r\n  })\r\n  .catch(err =>{\r\n      console.log(err);\r\n      this.setState({isLoading:false});\r\n  });\r\n    }\r\n\r\n    deleteBookingHandler = bookingId => {\r\n        this.setState({isLoading : true});\r\n        const requestBody = {\r\n            query: `\r\n                mutation {\r\n                    cancelBooking(bookingId:\"${bookingId}\") {\r\n                    _id\r\n                    title\r\n                  }\r\n                }\r\n              `\r\n          };\r\n        const token=this.context.token;\r\n      \r\n        fetch('http://localhost:8000/graphql', {\r\n            method:'POST',    //graphql request are always POST and by default it sends in GET\r\n            body:JSON.stringify(requestBody),\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                'Authorization':'Bearer ' + token\r\n            }\r\n        })\r\n        .then(res =>{\r\n            if(res.status!==200 && res.status!==201){\r\n              throw new Error('Failed');\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(resData =>{\r\n          this.setState(prevState =>{\r\n              const updatedBookings= prevState.bookings.filter(booking=>{\r\n                  return booking._id !==bookingId;\r\n              });\r\n              return {bookings:updatedBookings, isLoading:false};\r\n          })\r\n        })\r\n        .catch(err =>{\r\n            console.log(err);\r\n            this.setState({isLoading:false});\r\n        });\r\n        \r\n    }\r\n\r\n    render() {\r\n        return  (\r\n            <React.Fragment>\r\n             {this.state.isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <BookingList bookings={this.state.bookings} onDelete={this.deleteBookingHandler} />\r\n        )}\r\n          </React.Fragment>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default BookingPage;\r\n","import React from 'react';\r\n\r\nimport './Modal.css';\r\n\r\nconst modal = props => (\r\n  <div className=\"modal\">\r\n    <header className=\"modal__header\">\r\n      <h1>{props.title}</h1>\r\n    </header>\r\n    <section className=\"modal__content\">{props.children}</section>\r\n    <section className=\"modal__actions\">\r\n      {props.canCancel && (\r\n        <button className=\"btn\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n      )}\r\n      {props.canConfirm && (\r\n        <button className=\"btn\" onClick={props.onConfirm}>\r\n          {props.confirmText}\r\n        </button>\r\n      )}\r\n    </section>\r\n  </div>\r\n);\r\n\r\nexport default modal;","import React from 'react';\n\nimport './Backdrop.css';\n\nconst backdrop = props => <div className=\"backdrop\"></div>;\n\nexport default backdrop;","import React from 'react';\r\nimport './EventItem.css';\r\n\r\nconst eventItem = props => (\r\n  <li key={props.eventId} className=\"events_list-item\">\r\n    <div>\r\n      <h1>{props.title}</h1>\r\n      <h2>${props.price} -- {new Date(props.date).toLocaleDateString()}</h2>\r\n    </div>\r\n    <div>\r\n    {props.userId === props.creatorId ? (\r\n        <p>Your the owner of this event.</p>\r\n      ) : (\r\n        <button className=\"btn\"onClick={props.onDetail.bind(this,props.eventId)}>\r\n          View Details\r\n        </button>\r\n      )}\r\n    </div>\r\n  </li>\r\n\r\n);\r\n\r\nexport default eventItem;\r\n","  \r\nimport React from 'react';\r\nimport EventItem from './Eventitem/EventItem';\r\nimport './EventList.css';\r\n\r\nconst eventList = props => {\r\n  const events = props.events.map(event => {\r\n    return (\r\n      <EventItem\r\n        key={event._id}                \r\n        eventId={event._id}\r\n        title={event.title}\r\n        price={event.price}\r\n        date={event.date}\r\n        userId={props.authUserId}\r\n        creatorId={event.creator._id}\r\n        onDetail={props.onViewDetail}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <ul className=\"event_list\">{events}</ul>;\r\n};\r\n\r\nexport default eventList;","import React, { Component } from 'react';\r\n\r\nimport Modal from '../component/Modal/Modal';\r\nimport Backdrop from '../component/Backdrop/Backdrop';\r\nimport './Events.css';\r\nimport EventList from '../component/Events/EventList/EventList';\r\nimport Spinner from '../component/Spinner/Spinner';\r\nimport AuthContext from '../context/auth-context';\r\n\r\nclass EventsPage extends Component {            \r\n  state = {\r\n    creating: false,\r\n    events:[],\r\n    isLoading:false,\r\n    selectedEvent:null\r\n  };\r\n\r\n  static contextType=AuthContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.titleElRef = React.createRef();\r\n    this.priceElRef = React.createRef();\r\n    this.dateElRef = React.createRef();\r\n    this.descriptionElRef = React.createRef();\r\n  }\r\n  isActive=true;\r\n\r\n  componentDidMount() {\r\n    this.fetchEvents();\r\n  }\r\n\r\n  startCreateEventHandler = () => {\r\n    this.setState({ creating: true });\r\n  };\r\n\r\n  modalConfirmHandler = () => {\r\n    this.setState({ creating: false });\r\n\r\n    const title = this.titleElRef.current.value;\r\n    const price = +this.priceElRef.current.value;\r\n    const date = this.dateElRef.current.value;\r\n    const description = this.descriptionElRef.current.value;\r\n\r\n    if (\r\n      title.trim().length === 0 ||\r\n      price <= 0 ||\r\n      date.trim().length === 0 ||\r\n      description.trim().length === 0) {\r\n      return;\r\n    }\r\n\r\n    const event = { title, price, date, description };\r\n    console.log(event);\r\n\r\n    const requestBody = {\r\n      query: `\r\n          mutation {\r\n            createEvent(eventinput: {title: \"${title}\", description: \"${description}\", price: ${price}, date: \"${date}\"}) {\r\n              _id\r\n              title\r\n              description\r\n              date\r\n              price\r\n            }\r\n          }\r\n        `\r\n    };\r\n  const token=this.context.token;\r\n  \r\n  fetch('http://localhost:8000/graphql', {\r\n      method:'POST',    //graphql request are always POST and by default it sends in GET\r\n      body:JSON.stringify(requestBody),\r\n      headers:{\r\n          'Content-Type':'application/json', //we tell the backend we are sending data in JSON. so, parse it as json\r\n          'Authorization':'Bearer ' + token\r\n      }\r\n  })\r\n  .then(res =>{\r\n      if(res.status!==200 && res.status!==201){\r\n        throw new Error('Failed');\r\n      }\r\n      \r\n      return res.json();\r\n  })\r\n  .then(resData =>{\r\n    this.setState(prevState=>{\r\n      const updatedEvents=[...prevState.events];\r\n      updatedEvents.push({\r\n        _id:resData.data.createEvent._id,\r\n        title:resData.data.createEvent.title,\r\n        description:resData.data.createEvent.description,\r\n        date:resData.data.createEvent.date,\r\n        price:resData.data.createEvent.price,\r\n        creator:{\r\n          _id:this.context.userId\r\n        }\r\n      });\r\n      return {events:updatedEvents};\r\n    });\r\n  })\r\n  .catch(err =>{\r\n      console.log(err);\r\n  });\r\n  };\r\n\r\n  modalCancelHandler = () => {\r\n    this.setState({ creating: false ,selectedEvent:null});\r\n  };\r\n\r\n  fetchEvents() {\r\n    this.setState({isLoading:true});\r\n    const requestBody = {\r\n      query: `\r\n          query {\r\n            events {\r\n              _id\r\n              title\r\n              description\r\n              date\r\n              price\r\n              creator {\r\n                _id\r\n                email\r\n              }\r\n            }\r\n          }\r\n        `\r\n    };\r\n  \r\n  fetch('http://localhost:8000/graphql', {\r\n      method:'POST',    //graphql request are always POST and by default it sends in GET\r\n      body:JSON.stringify(requestBody),\r\n      headers:{\r\n          'Content-Type':'application/json'\r\n      }\r\n  })\r\n  .then(res =>{\r\n      if(res.status!==200 && res.status!==201){\r\n        throw new Error('Failed');\r\n      }\r\n      \r\n      return res.json();\r\n  })\r\n  .then(resData =>{\r\n    const events = resData.data.events;\r\n    if(this.isActive)\r\n        this.setState({ events: events, isLoading:false});\r\n  })\r\n  .catch(err =>{\r\n      console.log(err);\r\n      if(this.isActive)\r\n      this.setState({isLoading:false});\r\n  });\r\n  }\r\n\r\n  showDetailHandler = eventId =>{\r\n    this.setState(prevState =>{\r\n      const selectedEvent=prevState.events.find(e=>e._id===eventId)\r\n      return {selectedEvent:selectedEvent};\r\n    })\r\n  }\r\n  bookEventHandler = () => {\r\n    if (!this.context.token) {\r\n      this.setState({ selectedEvent: null });\r\n      return;\r\n    }\r\n    const requestBody = {\r\n      query: `\r\n          mutation {\r\n            bookEvent(eventId: \"${this.state.selectedEvent._id}\") {\r\n              _id\r\n             createdAt\r\n             updatedAt\r\n            }\r\n          }\r\n        `\r\n    };\r\n\r\n    fetch('http://localhost:8000/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + this.context.token\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Failed!');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        console.log(resData);\r\n        this.setState({ selectedEvent: null });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  componentWillUnmount(){\r\n    this.isActive=false;\r\n  }\r\n\r\n  render() {  \r\n  \r\n    return (\r\n      <React.Fragment>\r\n        {(this.state.creating || this.state.selectedEvent) && <Backdrop />}\r\n        {this.state.creating && (\r\n          <Modal\r\n            title=\"Add Event\"\r\n            canCancel\r\n            canConfirm\r\n            onCancel={this.modalCancelHandler}\r\n            onConfirm={this.modalConfirmHandler}\r\n            confirmText=\"Confirm\"\r\n          >\r\n            <form>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input type=\"text\" id=\"title\" ref={this.titleElRef} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"price\">Price</label>\r\n                <input type=\"number\" id=\"price\" ref={this.priceElRef} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"date\">Date</label>\r\n                <input type=\"datetime-local\" id=\"date\" ref={this.dateElRef} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <textarea\r\n                  id=\"description\"\r\n                  rows=\"4\"\r\n                  ref={this.descriptionElRef}\r\n                />\r\n              </div> \r\n            </form>\r\n          </Modal>\r\n        )}\r\n        {this.state.selectedEvent && (\r\n          <Modal\r\n            title={this.state.selectedEvent.title}\r\n            canCancel\r\n            canConfirm\r\n            onCancel={this.modalCancelHandler}\r\n            onConfirm={this.bookEventHandler}\r\n            confirmText={this.context.token ? \"Book\": \"Confirm\"}\r\n          >\r\n           <h1>{this.state.selectedEvent.title}</h1>\r\n           <h2>${this.state.selectedEvent.price} - {new Date(this.state.selectedEvent.date).toLocaleDateString()}</h2> \r\n           <p>{this.state.selectedEvent.description}</p>\r\n          </Modal>\r\n        )}\r\n       {this.context.token && ( <div className=\"events-control\">\r\n          <p>Share your own Events!</p>\r\n          <button className=\"btn\" onClick={this.startCreateEventHandler}>\r\n            Create Event\r\n          </button>\r\n        </div>)}\r\n        {this.state.isLoading ? (<Spinner className=\"loading\"/>):( <EventList\r\n            events={this.state.events}\r\n            authUserId={this.context.userId}\r\n            onViewDetail={this.showDetailHandler}\r\n          />)}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default EventsPage;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './MainNavigation.css';\r\nimport AuthContext from '../../context/auth-context';\r\n\r\nconst mainNavigation =  props => (  //this is a functional component so static thing doesn't work here\r\n    <AuthContext.Consumer>         \r\n        { (context) =>{\r\n                return(\r\n                    <header className='main-navigation'>\r\n                        <div className=\"main-navigation_logo\">\r\n                            <h1 className=\"main-heading\">EasyEvent</h1>\r\n                        </div>\r\n                        <div className=\"main-navigation_items\">\r\n                            <ul>\r\n                                {!context.token&& <li><NavLink to='/auth'> Authenticate</NavLink></li>}  {/*authenticate is only rendered when u are not logged in*/}\r\n                                <li><NavLink to='/events'>Events</NavLink></li>\r\n                                {context.token&&(\r\n                                    <React.Fragment>\r\n                                      <li><NavLink to='/bookings'> Bookings</NavLink></li>\r\n                                     <li>\r\n                                     <button onClick={context.logout}>Logout</button>\r\n                                     </li>\r\n                                    </React.Fragment>\r\n                                 )}\r\n                            </ul>\r\n                \r\n                        </div>\r\n                    </header>\r\n                        );\r\n            }\r\n        }\r\n    </AuthContext.Consumer>\r\n        \r\n);\r\n\r\nexport default mainNavigation;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\r\n\r\nimport AuthPage from './pages/Auth';\r\nimport BookingsPage from './pages/Booking';\r\nimport EventsPage from './pages/Event';\r\nimport MainNavigation from './component/NavigationBar/MainNavigation';\r\nimport AuthContext from './context/auth-context';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    token: null,\r\n    userId: null\r\n  };\r\n\r\n  login = (token, userId, tokenExpiration) => {\r\n    this.setState({ token: token, userId: userId });\r\n  };\r\n\r\n  logout = () => {\r\n    this.setState({ token: null, userId: null });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <React.Fragment>\r\n          <AuthContext.Provider\r\n            value={{\r\n              token: this.state.token,\r\n              userId: this.state.userId,\r\n              login: this.login,\r\n              logout: this.logout\r\n            }}\r\n          >\r\n            <MainNavigation />\r\n            <main className=\"main-content\">\r\n              <Switch>\r\n                \r\n                {this.state.token && <Redirect from=\"/\" to=\"/events\" exact />}\r\n                {this.state.token && <Redirect from=\"/auth\" to=\"/events\" exact />}\r\n                {!this.state.token && (\r\n                  <Route path=\"/auth\" component={AuthPage} />\r\n                )}\r\n                <Route path=\"/events\" component={EventsPage} />     // event page doesnot require authentication\r\n                {this.state.token && (\r\n                  <Route path=\"/bookings\" component={BookingsPage} />\r\n                )}\r\n                {!this.state.token && <Redirect  to=\"/auth\" exact />}\r\n              </Switch>\r\n            </main>\r\n          </AuthContext.Provider>\r\n        </React.Fragment>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// const App=require('./App').default;\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}